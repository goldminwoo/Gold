<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">


	<!-- 게시판 글 저장 -->
	<insert id="insertBoard">
		insert into BOARD (no, id, title, editor,
		hitCount,
		reportCount, spamCount, sexualCount,
		swearWordCount, blindStatus,
		writeDate, modifiedDate
		)
		values(BOARD_SEQ.NEXTVAL,#{id},#{title},
		#{editor},#{hitCount},#{reportCount},#{spamCount},
		#{sexualCount},#{swearWordCount},'활성',
		sysdate,sysdate
		)
	</insert>

	<!-- 검색전후 레코드개수 -->
	<select id="getListCount" resultType="int">
		select count(no) from BOARD
		<where>
			<if test="searchCondition==''"></if><!-- 총레코드개수 -->
			<if test="searchCondition=='title'">
				<!-- 검색조건이 제목인 경우 -->
				title like #{searchKeyword} <!-- like 검색연산자 -->
			</if>
			<if test="searchCondition=='editor'"><!-- 내용 -->
				editor like #{searchKeyword}
			</if>
		</where>
	</select>

	<!-- 검색전후목록 -->
	<select id="getBoardList" resultType="BoardVO">
		select * from
		(select rowNum rNum, no, id, title,
		hitCount,writeDate
		from (select * from BOARD
		<where>
			<if test="searchCondition==''"></if>
			<if test="searchCondition=='id'">
				id like #{searchKeyword}
			</if>
			<if test="searchCondition=='title'">
				title like #{searchKeyword}
			</if>
			<if test="searchCondition=='editor'">
				editor like #{searchKeyword}
			</if>
		</where>
		order by no desc))
		where rNum &gt;= #{startRow} and rNum &lt;=
		#{endRow}
		<!-- &gt;은 ~보다 크다(>),&lt;은 ~보다 작다(<),rowNum 컬럼은 오라클에서 테이블생성시 생성되는 기본컬럼으로 
			레코드 저장시 일련번호값이 저장됨. -->
	</select>

	<!-- 내용보기+수정폼+답변폼+삭제폼 -->
	<select id="getBoardContent" resultType="BoardVO">
		select * from BOARD
		where no=#{no}
	</select>

	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="int">
		update BOARD set
		hitCount=hitCount+1
		where no=#{no}
	</update>

	<!-- 댓글 조회 -->
	<select id="selectReplyList" resultType="ReplyVO">
		select * from
		BOARD_REPLY where boardNo = #{boardNo}
		order by no asc
	</select>

	<!-- 댓글 전체 삭제 -->
	<delete id="deleteReply">
		delete from BOARD_REPLY where boardNo = #{boardNo}
	</delete>
	
	<!-- 댓글 하나 삭제 -->
	<delete id="deleteReplyOne">
		delete from BOARD_REPLY where no = #{no}
	</delete>

	<!-- 게시물 삭제 -->
	<delete id="deleteBoard">
		delete from BOARD where no = #{no}
	</delete>
	
	<!-- 댓글 저장 -->
	<insert id="insertReply">
		insert into BOARD_REPLY
		values(BOARD_REPLY_SEQ.NEXTVAL, #{boardNo},
		#{id}, #{content})
	</insert>
	
	<!-- 게시물 수정 -->
	<update id="updateBoard">
	update BOARD set
		title = #{title},
		editor = #{editor},
		modifiedDate = sysdate
		where no = #{no}
	</update>
</mapper>
