<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Reward">

	<!-- 리워드 프로젝트 등록 -->
	<insert id="insertReward">
		insert into REWARD
		(id,rewardTotalProjectNo,projectName,name,
		phone1, phone2, phone3, address1,
		address2,
		pay,businessNumber,companyName,searchTag,
		cate,approved,testDatepicker1,testDatepicker2)
		values(#{id},reward_Total_Project_no_seq.nextval,#{projectName},#{name},
		#{phone1}, #{phone2}, #{phone3}, #{address1}, #{address2},
		#{pay},#{businessNumber},#{companyName},'dd',
		'dd',0,#{testDatepicker1},#{testDatepicker2})
	</insert>

	<!-- 리워드 프로젝트 상품 등록 -->
	<insert id="insertRewardItem">
		insert into REWARD_ITEM
		(id,rewardTotalProjectNo,productName,ea,soldEa,price,sale,sdate)
		values(#{id},#{rewardTotalProjectNo},#{productName},#{ea},0,#{price},#{sale},#{sdate})
	</insert>
	
	<!-- 메인이미지 등록 -->
	<insert id="insertRewardMainImage">
		insert into REWARD_MAIN_IMAGE
		(id,rewardTotalProjectNo,mainImageFile)
		values(#{id},#{rewardTotalProjectNo},#{mainImageFile})
	</insert>

	<!-- 리워드 스토리 등록 -->
	<insert id="insertRewardStory">
		insert into REWARD_STORY (id,rewardTotalProjectNo,storyCont)
		values(#{id},#{rewardTotalProjectNo},#{storyCont})
	</insert>

	<!-- 리워드 문의사항 등록 -->
	<insert id="insertRewardQuesion">
		insert into REWARD_QUESION
		(id,rewardTotalProjectNo,queEmail,quePhone1,quePhone2,quePhone3,queUrl,queSns)
		values(#{id},#{rewardTotalProjectNo},#{queEmail},#{quePhone1},#{quePhone2},#{quePhone3},#{queUrl},#{queSns})
	</insert>

	<!-- 리워드 프로젝트 등록 수 증가-->
	<update id="rewardNo">
		update REWARD SET projectNo=projectNo+1 where
		rewardTotalProjectNo=#{no}
	</update>

	<!-- 아이디로 RewardVO 조회 -->
	<select id="rewardSearch" resultType="RewardVO">
		select * from REWARD where id=#{id}
	</select>

	<select id="rewardTotalProjectNo" resultType="java.lang.Integer">
		select * from (select rewardTotalProjectNo
		from REWARD order by rewardTotalProjectNo DESC) where ROWNUM=1
	</select>


	<!-- totalProjectNo로 RewardVO 검색 -->
	<select id="getReward" resultType="RewardVO">
		select * from
		REWARD where
		rewardTotalProjectNo=#{rewardTotalProjectNo}
	</select>
	
	<!-- REWARDITEM 조회 -->
	<select id="getRewardItem" resultType="RewardItemVO">
		select * from 
		REWARD_ITEM WHERE 
		rewardTotalProjectNo = #{rewardTotalProjectNo}
	</select>
	
	<!-- REWARDSTORY 조회 -->
	<select id="getRewardStory" resultType="RewardStoryVO">
		select * from
		REWARD_STORY WHERE
		rewardTotalProjectNo = #{rewardTotalProjectNo}
	</select>	

	<!-- 전체 reward 목록 조회 -->
	<select id="getRewardList" resultType="RewardVO">
		select * from
		(select rowNum rNum, rewardTotalProjectNo,
		id,name,projectName,approved,testDatepicker1
		from (select * from REWARD
		order by rewardTotalProjectNo))
		where rNum &gt;= #{startRow} and rNum &lt;=
		#{endRow}
		<!-- &gt;은 ~보다 크다(>),&lt;은 ~보다 작다(<),rowNum 컬럼은 오라클에서 테이블생성시 생성되는 기본컬럼으로 
			레코드 저장시 일련번호값이 저장됨. -->
	</select>

	<!-- 검색전후 레코드개수 -->
	<select id="getRewardListCount" resultType="int">
		select
		count(rewardTotalProjectNo) from REWARD
	</select>

	<!-- approved 0 : 미심사 / 심사중 approved 1 : 심사완료 / 진행중 approved 2 : 오픈 예정 현재날짜에서 
		오픈 날짜가 미달일시 approved 3 : 기간 만료 종료 날짜가 현재날짜보다 높으면 approved 4 : 정지 프로젝트 프로젝트 
		정지 -->

	<!-- 리워드 승인 -->
	<update id="updateRewardApproved">
		update REWARD SET approved=1 where
		rewardTotalProjectNo = #{no}
	</update>

	<!-- 리워드 메인페이지 목록 -->
	<select id="rewardMainPage" resultType="RewardVO">
		select * from REWARD where approved=1 order by rewardTotalProjectNo asc
	</select>
	
	<!-- 리워드 상품 목록 -->
	<select id="rewardProduct" resultType="java.lang.String">
		select B.productName from REWARD a
		INNER JOIN REWARD_ITEM b ON a.rewardTotalProjectNo = b.rewardTotalProjectNo
		AND a.approved=1 order by b.rewardTotalProjectNo asc
	</select>

	<!-- 리워드 메인이미지 불러오기 -->
	<select id="rewardMainImage" resultType="java.lang.String">
		select B.mainImageFile from REWARD a
		INNER JOIN REWARD_MAIN_IMAGE b ON a.rewardTotalProjectNo = b.rewardTotalProjectNo
        AND a.approved=1 order by b.rewardTotalProjectNo asc
	</select>
	
	<!-- 리워드 펀딩하기 처리 -->
	<insert id="insertFunding">
		insert into MEMBER_REWARD_FUNDING
		(no,id,productName,fundingPrice,ea,options)
		values(#{no},#{id},#{productName},#{fundingPrice},#{ea},#{options})
	</insert>
	
	<!-- 회원별 리워드 펀딩 수 -->
	<select id="getRewardFundingEa" resultType="MemberRewardFundingVO">
		select * from MEMBER_REWARD_FUNDING where no=#{no}
	</select>
	
	<!-- 리워드 펀딩 개수 증가 -->
	<update id="updateRewardSold">
		update REWARD_ITEM set soldEa=soldEa+#{ea},
		ea=ea-#{ea} where rewardTotalProjectNo=#{no} 
	</update>
	
	<!-- id로 리워드 개수 찾기 -->
	<select id="rewardIdCount" resultType="java.lang.Integer">
		select count(*) FROM MEMBER_REWARD_FUNDING where id=#{id}
	</select>
	
	<!-- 번호값으로 리워드 메인이미지 가져오기 -->
	<select id="getRewardMainImage" resultType="java.lang.String">
		select mainImageFile from REWARD_MAIN_IMAGE where rewardTotalProjectNo=#{rewardTotalProjectNo}
	</select>
</mapper>
